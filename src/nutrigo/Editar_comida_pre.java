/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nutrigo;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rene
 */
public class Editar_comida_pre extends javax.swing.JFrame {

    /**
     * Creates new form Editar_comida_pre
     */
    public Editar_comida_pre() {
        initComponents();
        this.getContentPane().setBackground(new java.awt.Color(175, 228, 202));
        this.setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("../img//recursos/Icono.png")).getImage());
        
        int row = Comidas_pre.Tabla.getSelectedRow();
        String reg = (String) Comidas_pre.Tabla.getValueAt(row, 0);
        int registro = Integer.parseInt(reg);
        
        Conectar con = new Conectar();
        Connection co = con.conexion();
        String sql = "SELECT calorias,comida,titulo,ingredientes FROM comidas_predeterminadas WHERE id=" + registro;
        String calorias="",tipo="";
        Statement st;
        try {
            st = co.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                calorias = rs.getString("calorias");
                tipo = rs.getString("comida");
                Titulo.setText(rs.getString("titulo"));
                Ingredientes.setText(rs.getString("ingredientes"));
            }
            Calorias.setValue(Integer.parseInt(calorias));
            if ("Desayuno".equals(tipo)){
                Tipo.setSelectedIndex(0);
            }
            else if ("Comida".equals(tipo)){
                Tipo.setSelectedIndex(1);
            }
            else if ("Cena".equals(tipo)){
                Tipo.setSelectedIndex(2);
            }
            else{
                Tipo.setSelectedIndex(3);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al mostrar los datos del alimento");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        Titulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Tipo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Calorias = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        Ingredientes = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar alimento");

        jLabel3.setText("Titulo");

        jLabel2.setText("Tipo de comida");

        Tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desayuno", "Comida", "Cena", "Colacion" }));

        jLabel4.setText("Ingredientes");

        jLabel1.setText("Numero de calorias:");

        Calorias.setModel(new javax.swing.SpinnerNumberModel(1000, 1000, 1800, 200));

        Ingredientes.setColumns(20);
        Ingredientes.setRows(5);
        jScrollPane1.setViewportView(Ingredientes);

        jButton2.setText("Cancelar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(0, 27, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Tipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Calorias))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Calorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = Comidas_pre.Tabla.getSelectedRow();
        String reg = (String) Comidas_pre.Tabla.getValueAt(row, 0);
        int registro = Integer.parseInt(reg);
        
        int calorias;
        String tipo,titulo,ingredientes;
        calorias = (int) Calorias.getValue();
        tipo = (String) Tipo.getSelectedItem();
        titulo = Titulo.getText();
        ingredientes = Ingredientes.getText();
        
        DefaultTableModel modelo = (DefaultTableModel) Comidas_pre.Tabla.getModel();
        Conectar con = new Conectar();
            Connection co = con.conexion();
            String sql = "UPDATE comidas_predeterminadas SET calorias=" + calorias + ",comida='" + tipo + "',titulo='" + titulo + "',ingredientes='" + ingredientes + "' WHERE id=" + registro;
        try {
            Statement stm = co.createStatement();
            stm.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Alimento actualizado con exito");
            
            int filas = Comidas_pre.Tabla.getRowCount();
            for (int i = 0;filas>i; i++)
            {
                modelo.removeRow(0);
            }
            
            
            String sql_actualizar = "SELECT id,calorias,comida,titulo FROM comidas_predeterminadas";
            String []datos_1000 = new String [4];
            Statement st;
            st = co.createStatement();
            ResultSet rs = st.executeQuery(sql_actualizar);
            while(rs.next()){
                datos_1000[0] =rs.getString("id");
                datos_1000[1]=rs.getString("calorias");
                datos_1000[2]=rs.getString("comida");
                datos_1000[3]=rs.getString("titulo");
                modelo.addRow(datos_1000);
            }
            
            this.setVisible(false);
            
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al actualizar el alimento, vuelva a intentarlo por favor");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editar_comida_pre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editar_comida_pre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editar_comida_pre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editar_comida_pre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editar_comida_pre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Calorias;
    private javax.swing.JTextArea Ingredientes;
    private javax.swing.JComboBox<String> Tipo;
    private javax.swing.JTextField Titulo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
