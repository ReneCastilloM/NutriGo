/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nutrigo;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rene
 */
public class Panel_Pacientes extends javax.swing.JPanel {

    /**
     * Creates new form Panel_Pacientes
     */
    public Panel_Pacientes() {
        initComponents();
        try {
            DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();
            Tabla.getColumnModel().getColumn(0).setPreferredWidth(50);
            Tabla.getColumnModel().getColumn(1).setPreferredWidth(300);
            Tabla.getColumnModel().getColumn(2).setPreferredWidth(50);
            Tabla.getColumnModel().getColumn(3).setPreferredWidth(105);
            Tabla.getColumnModel().getColumn(4).setPreferredWidth(240);
            Tabla.getColumnModel().getColumn(5).setPreferredWidth(105);
            Conectar con = new Conectar();
            Connection co = con.conexion();
            String sql = "SELECT id,nombre,edad,telefono,correo,celular FROM pacientes";
            String []datos = new String [6];
            Statement st = co.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                datos[0]=rs.getString("id");
                datos[1]=rs.getString("nombre");
                datos[2]=rs.getString("edad");
                datos[3]=rs.getString("telefono");
                datos[4]=rs.getString("correo");
                datos[5]=rs.getString("celular");
                modelo.addRow(datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Panel_Pacientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        Tabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Edad", "Telefono", "Correo", "Celular"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla.setGridColor(new java.awt.Color(0, 0, 0));
        Tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(Tabla);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/botones/info.png"))); // NOI18N
        jButton1.setText("Ver Informacion");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/botones/editar.png"))); // NOI18N
        jButton2.setText("Editar");

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/botones/eliminar.png"))); // NOI18N
        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(102, 255, 102));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/botones/agregar.png"))); // NOI18N
        jButton4.setText("Agregar Nuevo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(68, 68, 68)
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jButton4)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Ingresar_paciente_1 ing = new Ingresar_paciente_1();
        ing.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int fila = Tabla.getSelectedRow();
        if (fila != -1)
        {
            String nombre = String.valueOf(Tabla.getValueAt(fila, 1));
            int x = JOptionPane.showConfirmDialog(null, "Â¿Esta seguro que desea eliminar el registro de " + nombre + "?", "Eliminar paciente", JOptionPane.YES_NO_OPTION);
            if (x==0)
            {
                try {
                    int registro = Tabla.getSelectedRow() + 1;
                    Conectar con = new Conectar();
                    Connection co = con.conexion();
                    Statement stm = co.createStatement();
                    String eliminar_1 = "DELETE FROM pacientes WHERE id=" + registro;
                    String eliminar_2 = "DELETE FROM pacientes_clinico WHERE id=" + registro;
                    String eliminar_3 = "DELETE FROM pacientes_evaluacion WHERE id=" + registro;
                    String eliminar_4 = "DELETE FROM pacientes_info WHERE id=" + registro;
                    stm.executeUpdate(eliminar_1);
                    stm.executeUpdate(eliminar_2);
                    stm.executeUpdate(eliminar_3);
                    stm.executeUpdate(eliminar_4);
                    JOptionPane.showMessageDialog(null, "Registro eliminado con exito");
                    
                    //A PARTIR DE AQUI
                    DefaultTableModel modelo=(DefaultTableModel) Panel_Pacientes.Tabla.getModel();
                    int filas=Panel_Pacientes.Tabla.getRowCount();
                    for (int i = 0;filas>i; i++)
                    {
                        modelo.removeRow(0);
                    }
                    String sql = "SELECT id,nombre,edad,telefono,correo,celular FROM pacientes";
                    String []datos = new String [6];
                    Statement st = co.createStatement();
                    ResultSet rs = st.executeQuery(sql);
                    while(rs.next()){
                        datos[0]=rs.getString("id");
                        datos[1]=rs.getString("nombre");
                        datos[2]=rs.getString("edad");
                        datos[3]=rs.getString("telefono");
                        datos[4]=rs.getString("correo");
                        datos[5]=rs.getString("celular");
                        modelo.addRow(datos);
                    }
                    
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el registro, intentelo nuevamente");
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Para eliminar un registro, debes seleccionar su respectiva fila de la tabla");
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable Tabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
